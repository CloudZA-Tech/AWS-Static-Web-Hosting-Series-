name: Deploy Website

on:
  push:
    branches:
      - main
      - '*'  # Run on all branches

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      # Skip Terraform for now since we're using existing resources
      - name: Skip Terraform
        run: echo "Skipping Terraform deployment, using existing resources"

  Sync_S3:
    name: Sync files to S3 Bucket
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Check directory structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory listing:"
          ls -la
          echo "Website assets directory:"
          ls -la website_assets || echo "website_assets directory not found"
          echo "Website assets subdirectories:"
          find website_assets -type d | sort || echo "No subdirectories found"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Verify AWS Credentials
        run: |
          echo "Checking AWS identity..."
          aws sts get-caller-identity
          echo "Checking IAM permissions..."
          aws iam get-role --role-name OIDC-cicd-static-provider || echo "Failed to get role info"
          echo "Listing S3 bucket..."
          aws s3 ls s3://${{ secrets.S3_BUCKET_NAME }} || echo "Failed to list bucket"
          echo "Testing S3 permissions..."
          echo "test" > test.txt
          aws s3 cp test.txt s3://${{ secrets.S3_BUCKET_NAME }}/test.txt || echo "Failed to upload test file"

      - name: Sync files to S3
        run: |
          echo "Syncing files to S3..."
          echo "Listing files to be uploaded:"
          find ./website_assets -type f | sort
          echo "Running S3 sync with debug output:"
          aws s3 sync ./website_assets s3://${{ secrets.S3_BUCKET_NAME }} --delete --acl private --debug

  Invalidate_CloudFront:
    name: Invalidate CloudFront Distribution
    needs: Sync_S3
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"